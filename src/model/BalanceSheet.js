/*
 * Stocks
 * <h3>Authentication</h3>                     You need to authenticate to use this API.                     To authenticate click on the \"Authorize\" button and do one of the following steps.<br />                     1. Send your API key in the headers of the request by typing \"Bearer my-key\" on the Bearer authorization scheme.<br />                     2. Send your API key on the \"ApiKey\" query string parameter. To do this type your API key in the Query String authorization scheme.<br />                     Both methods are equally valid. We offer both options so that you can use the method that is easier to use in your application.<br />                     <br />                     <h3>API limits</h3>                     Your API key may be subject to daily/hourly limits. To know how much requests you have left look at the following headers in the response.<br />                     1. <strong>x-ratelimit-limit</strong> - The total number of requests that you are allowed to make in a given period (hour/day)                       2. <strong>x-ratelimit-remaining</strong> - The number of remaining requests that you can perform in the current period.<br />                     3. <strong>x-ratelimit-reset</strong> - The number of seconds until the current period resets.<br />                     <br />                     <h3>Suggestions</h3>                     You don't need to implement the whole API by hand in your programming language of choice.<br />                     Since this API has an OpenAPI specification you can use                      <a href=\"https://github.com/swagger-api/swagger-codegen\" target=\"_blank\">Swagger Generator</a>                      to automatically generate client stubs for more than 30 programming languages.                     <br />                     <br />                     You don't have an API key? <a href=\"https://www.equibles.com/api/pricing\" target=\"_blank\">Get one for free here.</a>
 *
 * OpenAPI spec version: v1
 * Contact: equibles@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The BalanceSheet model module.
 * @module model/BalanceSheet
 * @version v1
 */
export class BalanceSheet {
  /**
   * Constructs a new <code>BalanceSheet</code>.
   * @alias module:model/BalanceSheet
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>BalanceSheet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BalanceSheet} obj Optional instance to populate.
   * @return {module:model/BalanceSheet} The populated <code>BalanceSheet</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new BalanceSheet();
      if (data.hasOwnProperty('assets'))
        obj.assets = ApiClient.convertToType(data['assets'], 'Number');
      if (data.hasOwnProperty('tangibleAssets'))
        obj.tangibleAssets = ApiClient.convertToType(data['tangibleAssets'], 'Number');
      if (data.hasOwnProperty('currentAssets'))
        obj.currentAssets = ApiClient.convertToType(data['currentAssets'], 'Number');
      if (data.hasOwnProperty('cashAndCashEquivalents'))
        obj.cashAndCashEquivalents = ApiClient.convertToType(data['cashAndCashEquivalents'], 'Number');
      if (data.hasOwnProperty('cashAndShortTermInvestments'))
        obj.cashAndShortTermInvestments = ApiClient.convertToType(data['cashAndShortTermInvestments'], 'Number');
      if (data.hasOwnProperty('inventory'))
        obj.inventory = ApiClient.convertToType(data['inventory'], 'Number');
      if (data.hasOwnProperty('currentNetReceivables'))
        obj.currentNetReceivables = ApiClient.convertToType(data['currentNetReceivables'], 'Number');
      if (data.hasOwnProperty('nonCurrentAssets'))
        obj.nonCurrentAssets = ApiClient.convertToType(data['nonCurrentAssets'], 'Number');
      if (data.hasOwnProperty('propertyPlantEquipment'))
        obj.propertyPlantEquipment = ApiClient.convertToType(data['propertyPlantEquipment'], 'Number');
      if (data.hasOwnProperty('accumulatedDepreciationAmortization'))
        obj.accumulatedDepreciationAmortization = ApiClient.convertToType(data['accumulatedDepreciationAmortization'], 'Number');
      if (data.hasOwnProperty('intangibleAssets'))
        obj.intangibleAssets = ApiClient.convertToType(data['intangibleAssets'], 'Number');
      if (data.hasOwnProperty('intangibleAssetsExcludingGoodwill'))
        obj.intangibleAssetsExcludingGoodwill = ApiClient.convertToType(data['intangibleAssetsExcludingGoodwill'], 'Number');
      if (data.hasOwnProperty('goodwill'))
        obj.goodwill = ApiClient.convertToType(data['goodwill'], 'Number');
      if (data.hasOwnProperty('investments'))
        obj.investments = ApiClient.convertToType(data['investments'], 'Number');
      if (data.hasOwnProperty('longTermInvestments'))
        obj.longTermInvestments = ApiClient.convertToType(data['longTermInvestments'], 'Number');
      if (data.hasOwnProperty('shortTermInvestments'))
        obj.shortTermInvestments = ApiClient.convertToType(data['shortTermInvestments'], 'Number');
      if (data.hasOwnProperty('otherCurrentAssets'))
        obj.otherCurrentAssets = ApiClient.convertToType(data['otherCurrentAssets'], 'Number');
      if (data.hasOwnProperty('otherNonCurrentAssets'))
        obj.otherNonCurrentAssets = ApiClient.convertToType(data['otherNonCurrentAssets'], 'Number');
      if (data.hasOwnProperty('liabilities'))
        obj.liabilities = ApiClient.convertToType(data['liabilities'], 'Number');
      if (data.hasOwnProperty('currentLiabilities'))
        obj.currentLiabilities = ApiClient.convertToType(data['currentLiabilities'], 'Number');
      if (data.hasOwnProperty('currentAccountsPayable'))
        obj.currentAccountsPayable = ApiClient.convertToType(data['currentAccountsPayable'], 'Number');
      if (data.hasOwnProperty('deferredRevenue'))
        obj.deferredRevenue = ApiClient.convertToType(data['deferredRevenue'], 'Number');
      if (data.hasOwnProperty('currentDebt'))
        obj.currentDebt = ApiClient.convertToType(data['currentDebt'], 'Number');
      if (data.hasOwnProperty('shortTermDebt'))
        obj.shortTermDebt = ApiClient.convertToType(data['shortTermDebt'], 'Number');
      if (data.hasOwnProperty('nonCurrentLiabilities'))
        obj.nonCurrentLiabilities = ApiClient.convertToType(data['nonCurrentLiabilities'], 'Number');
      if (data.hasOwnProperty('capitalLeaseObligations'))
        obj.capitalLeaseObligations = ApiClient.convertToType(data['capitalLeaseObligations'], 'Number');
      if (data.hasOwnProperty('longTermDebt'))
        obj.longTermDebt = ApiClient.convertToType(data['longTermDebt'], 'Number');
      if (data.hasOwnProperty('currentLongTermDebt'))
        obj.currentLongTermDebt = ApiClient.convertToType(data['currentLongTermDebt'], 'Number');
      if (data.hasOwnProperty('longTermDebtNonCurrent'))
        obj.longTermDebtNonCurrent = ApiClient.convertToType(data['longTermDebtNonCurrent'], 'Number');
      if (data.hasOwnProperty('shortLongTermDebtTotal'))
        obj.shortLongTermDebtTotal = ApiClient.convertToType(data['shortLongTermDebtTotal'], 'Number');
      if (data.hasOwnProperty('otherCurrentLiabilities'))
        obj.otherCurrentLiabilities = ApiClient.convertToType(data['otherCurrentLiabilities'], 'Number');
      if (data.hasOwnProperty('otherNonCurrentLiabilities'))
        obj.otherNonCurrentLiabilities = ApiClient.convertToType(data['otherNonCurrentLiabilities'], 'Number');
      if (data.hasOwnProperty('equity'))
        obj.equity = ApiClient.convertToType(data['equity'], 'Number');
      if (data.hasOwnProperty('treasuryStock'))
        obj.treasuryStock = ApiClient.convertToType(data['treasuryStock'], 'Number');
      if (data.hasOwnProperty('retainedEarnings'))
        obj.retainedEarnings = ApiClient.convertToType(data['retainedEarnings'], 'Number');
      if (data.hasOwnProperty('commonStock'))
        obj.commonStock = ApiClient.convertToType(data['commonStock'], 'Number');
      if (data.hasOwnProperty('sharesOutstanding'))
        obj.sharesOutstanding = ApiClient.convertToType(data['sharesOutstanding'], 'Number');
      if (data.hasOwnProperty('accumulatedOtherComprehensiveIncome'))
        obj.accumulatedOtherComprehensiveIncome = ApiClient.convertToType(data['accumulatedOtherComprehensiveIncome'], 'Number');
      if (data.hasOwnProperty('workingCapital'))
        obj.workingCapital = ApiClient.convertToType(data['workingCapital'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Number} assets
 */
BalanceSheet.prototype.assets = undefined;

/**
 * @member {Number} tangibleAssets
 */
BalanceSheet.prototype.tangibleAssets = undefined;

/**
 * @member {Number} currentAssets
 */
BalanceSheet.prototype.currentAssets = undefined;

/**
 * @member {Number} cashAndCashEquivalents
 */
BalanceSheet.prototype.cashAndCashEquivalents = undefined;

/**
 * @member {Number} cashAndShortTermInvestments
 */
BalanceSheet.prototype.cashAndShortTermInvestments = undefined;

/**
 * @member {Number} inventory
 */
BalanceSheet.prototype.inventory = undefined;

/**
 * @member {Number} currentNetReceivables
 */
BalanceSheet.prototype.currentNetReceivables = undefined;

/**
 * @member {Number} nonCurrentAssets
 */
BalanceSheet.prototype.nonCurrentAssets = undefined;

/**
 * @member {Number} propertyPlantEquipment
 */
BalanceSheet.prototype.propertyPlantEquipment = undefined;

/**
 * @member {Number} accumulatedDepreciationAmortization
 */
BalanceSheet.prototype.accumulatedDepreciationAmortization = undefined;

/**
 * @member {Number} intangibleAssets
 */
BalanceSheet.prototype.intangibleAssets = undefined;

/**
 * @member {Number} intangibleAssetsExcludingGoodwill
 */
BalanceSheet.prototype.intangibleAssetsExcludingGoodwill = undefined;

/**
 * @member {Number} goodwill
 */
BalanceSheet.prototype.goodwill = undefined;

/**
 * @member {Number} investments
 */
BalanceSheet.prototype.investments = undefined;

/**
 * @member {Number} longTermInvestments
 */
BalanceSheet.prototype.longTermInvestments = undefined;

/**
 * @member {Number} shortTermInvestments
 */
BalanceSheet.prototype.shortTermInvestments = undefined;

/**
 * @member {Number} otherCurrentAssets
 */
BalanceSheet.prototype.otherCurrentAssets = undefined;

/**
 * @member {Number} otherNonCurrentAssets
 */
BalanceSheet.prototype.otherNonCurrentAssets = undefined;

/**
 * @member {Number} liabilities
 */
BalanceSheet.prototype.liabilities = undefined;

/**
 * @member {Number} currentLiabilities
 */
BalanceSheet.prototype.currentLiabilities = undefined;

/**
 * @member {Number} currentAccountsPayable
 */
BalanceSheet.prototype.currentAccountsPayable = undefined;

/**
 * @member {Number} deferredRevenue
 */
BalanceSheet.prototype.deferredRevenue = undefined;

/**
 * @member {Number} currentDebt
 */
BalanceSheet.prototype.currentDebt = undefined;

/**
 * @member {Number} shortTermDebt
 */
BalanceSheet.prototype.shortTermDebt = undefined;

/**
 * @member {Number} nonCurrentLiabilities
 */
BalanceSheet.prototype.nonCurrentLiabilities = undefined;

/**
 * @member {Number} capitalLeaseObligations
 */
BalanceSheet.prototype.capitalLeaseObligations = undefined;

/**
 * @member {Number} longTermDebt
 */
BalanceSheet.prototype.longTermDebt = undefined;

/**
 * @member {Number} currentLongTermDebt
 */
BalanceSheet.prototype.currentLongTermDebt = undefined;

/**
 * @member {Number} longTermDebtNonCurrent
 */
BalanceSheet.prototype.longTermDebtNonCurrent = undefined;

/**
 * @member {Number} shortLongTermDebtTotal
 */
BalanceSheet.prototype.shortLongTermDebtTotal = undefined;

/**
 * @member {Number} otherCurrentLiabilities
 */
BalanceSheet.prototype.otherCurrentLiabilities = undefined;

/**
 * @member {Number} otherNonCurrentLiabilities
 */
BalanceSheet.prototype.otherNonCurrentLiabilities = undefined;

/**
 * @member {Number} equity
 */
BalanceSheet.prototype.equity = undefined;

/**
 * @member {Number} treasuryStock
 */
BalanceSheet.prototype.treasuryStock = undefined;

/**
 * @member {Number} retainedEarnings
 */
BalanceSheet.prototype.retainedEarnings = undefined;

/**
 * @member {Number} commonStock
 */
BalanceSheet.prototype.commonStock = undefined;

/**
 * @member {Number} sharesOutstanding
 */
BalanceSheet.prototype.sharesOutstanding = undefined;

/**
 * @member {Number} accumulatedOtherComprehensiveIncome
 */
BalanceSheet.prototype.accumulatedOtherComprehensiveIncome = undefined;

/**
 * @member {Number} workingCapital
 */
BalanceSheet.prototype.workingCapital = undefined;

