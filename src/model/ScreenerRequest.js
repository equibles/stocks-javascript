/*
 * Stocks
 * <h3>Authentication</h3>                     You need to authenticate to use this API.                     To authenticate click on the \"Authorize\" button and do one of the following steps.<br />                     1. Send your API key in the headers of the request by typing \"Bearer my-key\" on the Bearer authorization scheme.<br />                     2. Send your API key on the \"ApiKey\" query string parameter. To do this type your API key in the Query String authorization scheme.<br />                     Both methods are equally valid. We offer both options so that you can use the method that is easier to use in your application.<br />                     <br />                     <h3>API limits</h3>                     Your API key may be subject to daily/hourly limits. To know how much requests you have left look at the following headers in the response.<br />                     1. <strong>x-ratelimit-limit</strong> - The total number of requests that you are allowed to make in a given period (hour/day)                       2. <strong>x-ratelimit-remaining</strong> - The number of remaining requests that you can perform in the current period.<br />                     3. <strong>x-ratelimit-reset</strong> - The number of seconds until the current period resets.<br />                     <br />                     <h3>Suggestions</h3>                     You don't need to implement the whole API by hand in your programming language of choice.<br />                     Since this API has an OpenAPI specification you can use                      <a href=\"https://github.com/swagger-api/swagger-codegen\" target=\"_blank\">Swagger Generator</a>                      to automatically generate client stubs for more than 30 programming languages.                     <br />                     <br />                     You don't have an API key? <a href=\"https://www.equibles.com/api/pricing\" target=\"_blank\">Get one for free here.</a>
 *
 * OpenAPI spec version: v1
 * Contact: equibles@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Recommendation} from './Recommendation';

/**
 * The ScreenerRequest model module.
 * @module model/ScreenerRequest
 * @version v1
 */
export class ScreenerRequest {
  /**
   * Constructs a new <code>ScreenerRequest</code>.
   * @alias module:model/ScreenerRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ScreenerRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ScreenerRequest} obj Optional instance to populate.
   * @return {module:model/ScreenerRequest} The populated <code>ScreenerRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ScreenerRequest();
      if (data.hasOwnProperty('searchQuery'))
        obj.searchQuery = ApiClient.convertToType(data['searchQuery'], 'String');
      if (data.hasOwnProperty('exchangeIds'))
        obj.exchangeIds = ApiClient.convertToType(data['exchangeIds'], ['Number']);
      if (data.hasOwnProperty('sectorIds'))
        obj.sectorIds = ApiClient.convertToType(data['sectorIds'], ['Number']);
      if (data.hasOwnProperty('industryIds'))
        obj.industryIds = ApiClient.convertToType(data['industryIds'], ['Number']);
      if (data.hasOwnProperty('marketCapMin'))
        obj.marketCapMin = ApiClient.convertToType(data['marketCapMin'], 'Number');
      if (data.hasOwnProperty('marketCapMax'))
        obj.marketCapMax = ApiClient.convertToType(data['marketCapMax'], 'Number');
      if (data.hasOwnProperty('betaMin'))
        obj.betaMin = ApiClient.convertToType(data['betaMin'], 'Number');
      if (data.hasOwnProperty('betaMax'))
        obj.betaMax = ApiClient.convertToType(data['betaMax'], 'Number');
      if (data.hasOwnProperty('forwardDividendMin'))
        obj.forwardDividendMin = ApiClient.convertToType(data['forwardDividendMin'], 'Number');
      if (data.hasOwnProperty('forwardDividendMax'))
        obj.forwardDividendMax = ApiClient.convertToType(data['forwardDividendMax'], 'Number');
      if (data.hasOwnProperty('forwardDividendYieldMin'))
        obj.forwardDividendYieldMin = ApiClient.convertToType(data['forwardDividendYieldMin'], 'Number');
      if (data.hasOwnProperty('forwardDividendYieldMax'))
        obj.forwardDividendYieldMax = ApiClient.convertToType(data['forwardDividendYieldMax'], 'Number');
      if (data.hasOwnProperty('shortRatioMin'))
        obj.shortRatioMin = ApiClient.convertToType(data['shortRatioMin'], 'Number');
      if (data.hasOwnProperty('shortRatioMax'))
        obj.shortRatioMax = ApiClient.convertToType(data['shortRatioMax'], 'Number');
      if (data.hasOwnProperty('sharesShortPercentageMin'))
        obj.sharesShortPercentageMin = ApiClient.convertToType(data['sharesShortPercentageMin'], 'Number');
      if (data.hasOwnProperty('sharesShortPercentageMax'))
        obj.sharesShortPercentageMax = ApiClient.convertToType(data['sharesShortPercentageMax'], 'Number');
      if (data.hasOwnProperty('sharesShortPreviousMonthPercentageMin'))
        obj.sharesShortPreviousMonthPercentageMin = ApiClient.convertToType(data['sharesShortPreviousMonthPercentageMin'], 'Number');
      if (data.hasOwnProperty('sharesShortPreviousMonthPercentageMax'))
        obj.sharesShortPreviousMonthPercentageMax = ApiClient.convertToType(data['sharesShortPreviousMonthPercentageMax'], 'Number');
      if (data.hasOwnProperty('analystRecommendationMin'))
        obj.analystRecommendationMin = Recommendation.constructFromObject(data['analystRecommendationMin']);
      if (data.hasOwnProperty('analystRecommendationMax'))
        obj.analystRecommendationMax = Recommendation.constructFromObject(data['analystRecommendationMax']);
      if (data.hasOwnProperty('performanceOneDayMin'))
        obj.performanceOneDayMin = ApiClient.convertToType(data['performanceOneDayMin'], 'Number');
      if (data.hasOwnProperty('performanceOneDayMax'))
        obj.performanceOneDayMax = ApiClient.convertToType(data['performanceOneDayMax'], 'Number');
      if (data.hasOwnProperty('performanceOneWeekMin'))
        obj.performanceOneWeekMin = ApiClient.convertToType(data['performanceOneWeekMin'], 'Number');
      if (data.hasOwnProperty('performanceOneWeekMax'))
        obj.performanceOneWeekMax = ApiClient.convertToType(data['performanceOneWeekMax'], 'Number');
      if (data.hasOwnProperty('performanceTwoWeeksMin'))
        obj.performanceTwoWeeksMin = ApiClient.convertToType(data['performanceTwoWeeksMin'], 'Number');
      if (data.hasOwnProperty('performanceTwoWeeksMax'))
        obj.performanceTwoWeeksMax = ApiClient.convertToType(data['performanceTwoWeeksMax'], 'Number');
      if (data.hasOwnProperty('performanceOneMonthMin'))
        obj.performanceOneMonthMin = ApiClient.convertToType(data['performanceOneMonthMin'], 'Number');
      if (data.hasOwnProperty('performanceOneMonthMax'))
        obj.performanceOneMonthMax = ApiClient.convertToType(data['performanceOneMonthMax'], 'Number');
      if (data.hasOwnProperty('performanceThreeMonthsMin'))
        obj.performanceThreeMonthsMin = ApiClient.convertToType(data['performanceThreeMonthsMin'], 'Number');
      if (data.hasOwnProperty('performanceThreeMonthsMax'))
        obj.performanceThreeMonthsMax = ApiClient.convertToType(data['performanceThreeMonthsMax'], 'Number');
      if (data.hasOwnProperty('performanceOneYearMin'))
        obj.performanceOneYearMin = ApiClient.convertToType(data['performanceOneYearMin'], 'Number');
      if (data.hasOwnProperty('performanceOneYearMax'))
        obj.performanceOneYearMax = ApiClient.convertToType(data['performanceOneYearMax'], 'Number');
      if (data.hasOwnProperty('performanceThreeYearsMin'))
        obj.performanceThreeYearsMin = ApiClient.convertToType(data['performanceThreeYearsMin'], 'Number');
      if (data.hasOwnProperty('performanceThreeYearsMax'))
        obj.performanceThreeYearsMax = ApiClient.convertToType(data['performanceThreeYearsMax'], 'Number');
      if (data.hasOwnProperty('performanceFiveYearsMin'))
        obj.performanceFiveYearsMin = ApiClient.convertToType(data['performanceFiveYearsMin'], 'Number');
      if (data.hasOwnProperty('performanceFiveYearsMax'))
        obj.performanceFiveYearsMax = ApiClient.convertToType(data['performanceFiveYearsMax'], 'Number');
      if (data.hasOwnProperty('performanceTenYearsMin'))
        obj.performanceTenYearsMin = ApiClient.convertToType(data['performanceTenYearsMin'], 'Number');
      if (data.hasOwnProperty('performanceTenYearsMax'))
        obj.performanceTenYearsMax = ApiClient.convertToType(data['performanceTenYearsMax'], 'Number');
      if (data.hasOwnProperty('performanceTwentyYearsMin'))
        obj.performanceTwentyYearsMin = ApiClient.convertToType(data['performanceTwentyYearsMin'], 'Number');
      if (data.hasOwnProperty('performanceTwentyYearsMax'))
        obj.performanceTwentyYearsMax = ApiClient.convertToType(data['performanceTwentyYearsMax'], 'Number');
      if (data.hasOwnProperty('epsGrowthOneYearMin'))
        obj.epsGrowthOneYearMin = ApiClient.convertToType(data['epsGrowthOneYearMin'], 'Number');
      if (data.hasOwnProperty('epsGrowthOneYearMax'))
        obj.epsGrowthOneYearMax = ApiClient.convertToType(data['epsGrowthOneYearMax'], 'Number');
      if (data.hasOwnProperty('epsGrowthTwoYearsMin'))
        obj.epsGrowthTwoYearsMin = ApiClient.convertToType(data['epsGrowthTwoYearsMin'], 'Number');
      if (data.hasOwnProperty('epsGrowthTwoYearsMax'))
        obj.epsGrowthTwoYearsMax = ApiClient.convertToType(data['epsGrowthTwoYearsMax'], 'Number');
      if (data.hasOwnProperty('epsGrowthThreeYearsMin'))
        obj.epsGrowthThreeYearsMin = ApiClient.convertToType(data['epsGrowthThreeYearsMin'], 'Number');
      if (data.hasOwnProperty('epsGrowthThreeYearsMax'))
        obj.epsGrowthThreeYearsMax = ApiClient.convertToType(data['epsGrowthThreeYearsMax'], 'Number');
      if (data.hasOwnProperty('epsGrowthFiveYearsMin'))
        obj.epsGrowthFiveYearsMin = ApiClient.convertToType(data['epsGrowthFiveYearsMin'], 'Number');
      if (data.hasOwnProperty('epsGrowthFiveYearsMax'))
        obj.epsGrowthFiveYearsMax = ApiClient.convertToType(data['epsGrowthFiveYearsMax'], 'Number');
      if (data.hasOwnProperty('epsGrowthTenYearsMin'))
        obj.epsGrowthTenYearsMin = ApiClient.convertToType(data['epsGrowthTenYearsMin'], 'Number');
      if (data.hasOwnProperty('epsGrowthTenYearsMax'))
        obj.epsGrowthTenYearsMax = ApiClient.convertToType(data['epsGrowthTenYearsMax'], 'Number');
      if (data.hasOwnProperty('epsGrowthTwentyYearsMin'))
        obj.epsGrowthTwentyYearsMin = ApiClient.convertToType(data['epsGrowthTwentyYearsMin'], 'Number');
      if (data.hasOwnProperty('epsGrowthTwentyYearsMax'))
        obj.epsGrowthTwentyYearsMax = ApiClient.convertToType(data['epsGrowthTwentyYearsMax'], 'Number');
      if (data.hasOwnProperty('peMin'))
        obj.peMin = ApiClient.convertToType(data['peMin'], 'Number');
      if (data.hasOwnProperty('peMax'))
        obj.peMax = ApiClient.convertToType(data['peMax'], 'Number');
      if (data.hasOwnProperty('pegMin'))
        obj.pegMin = ApiClient.convertToType(data['pegMin'], 'Number');
      if (data.hasOwnProperty('pegMax'))
        obj.pegMax = ApiClient.convertToType(data['pegMax'], 'Number');
      if (data.hasOwnProperty('priceFcfMin'))
        obj.priceFcfMin = ApiClient.convertToType(data['priceFcfMin'], 'Number');
      if (data.hasOwnProperty('priceFcfMax'))
        obj.priceFcfMax = ApiClient.convertToType(data['priceFcfMax'], 'Number');
      if (data.hasOwnProperty('bookValuePerShareMin'))
        obj.bookValuePerShareMin = ApiClient.convertToType(data['bookValuePerShareMin'], 'Number');
      if (data.hasOwnProperty('bookValuePerShareMax'))
        obj.bookValuePerShareMax = ApiClient.convertToType(data['bookValuePerShareMax'], 'Number');
      if (data.hasOwnProperty('priceBookValuePerShareMin'))
        obj.priceBookValuePerShareMin = ApiClient.convertToType(data['priceBookValuePerShareMin'], 'Number');
      if (data.hasOwnProperty('priceBookValuePerShareMax'))
        obj.priceBookValuePerShareMax = ApiClient.convertToType(data['priceBookValuePerShareMax'], 'Number');
      if (data.hasOwnProperty('payoutMin'))
        obj.payoutMin = ApiClient.convertToType(data['payoutMin'], 'Number');
      if (data.hasOwnProperty('payoutMax'))
        obj.payoutMax = ApiClient.convertToType(data['payoutMax'], 'Number');
      if (data.hasOwnProperty('debtToEquityMin'))
        obj.debtToEquityMin = ApiClient.convertToType(data['debtToEquityMin'], 'Number');
      if (data.hasOwnProperty('debtToEquityMax'))
        obj.debtToEquityMax = ApiClient.convertToType(data['debtToEquityMax'], 'Number');
      if (data.hasOwnProperty('grossMarginMin'))
        obj.grossMarginMin = ApiClient.convertToType(data['grossMarginMin'], 'Number');
      if (data.hasOwnProperty('grossMarginMax'))
        obj.grossMarginMax = ApiClient.convertToType(data['grossMarginMax'], 'Number');
      if (data.hasOwnProperty('operatingMarginMin'))
        obj.operatingMarginMin = ApiClient.convertToType(data['operatingMarginMin'], 'Number');
      if (data.hasOwnProperty('operatingMarginMax'))
        obj.operatingMarginMax = ApiClient.convertToType(data['operatingMarginMax'], 'Number');
      if (data.hasOwnProperty('profitMarginMin'))
        obj.profitMarginMin = ApiClient.convertToType(data['profitMarginMin'], 'Number');
      if (data.hasOwnProperty('profitMarginMax'))
        obj.profitMarginMax = ApiClient.convertToType(data['profitMarginMax'], 'Number');
      if (data.hasOwnProperty('priceToSalesMin'))
        obj.priceToSalesMin = ApiClient.convertToType(data['priceToSalesMin'], 'Number');
      if (data.hasOwnProperty('priceToSalesMax'))
        obj.priceToSalesMax = ApiClient.convertToType(data['priceToSalesMax'], 'Number');
      if (data.hasOwnProperty('buybacksThreeMonthsMin'))
        obj.buybacksThreeMonthsMin = ApiClient.convertToType(data['buybacksThreeMonthsMin'], 'Number');
      if (data.hasOwnProperty('buybacksThreeMonthsMax'))
        obj.buybacksThreeMonthsMax = ApiClient.convertToType(data['buybacksThreeMonthsMax'], 'Number');
      if (data.hasOwnProperty('buybacksSixMonthsMin'))
        obj.buybacksSixMonthsMin = ApiClient.convertToType(data['buybacksSixMonthsMin'], 'Number');
      if (data.hasOwnProperty('buybacksSixMonthsMax'))
        obj.buybacksSixMonthsMax = ApiClient.convertToType(data['buybacksSixMonthsMax'], 'Number');
      if (data.hasOwnProperty('buybacksOneYearMin'))
        obj.buybacksOneYearMin = ApiClient.convertToType(data['buybacksOneYearMin'], 'Number');
      if (data.hasOwnProperty('buybacksOneYearMax'))
        obj.buybacksOneYearMax = ApiClient.convertToType(data['buybacksOneYearMax'], 'Number');
      if (data.hasOwnProperty('buybacksTwoYearsMin'))
        obj.buybacksTwoYearsMin = ApiClient.convertToType(data['buybacksTwoYearsMin'], 'Number');
      if (data.hasOwnProperty('buybacksTwoYearsMax'))
        obj.buybacksTwoYearsMax = ApiClient.convertToType(data['buybacksTwoYearsMax'], 'Number');
      if (data.hasOwnProperty('buybacksThreeYearsMin'))
        obj.buybacksThreeYearsMin = ApiClient.convertToType(data['buybacksThreeYearsMin'], 'Number');
      if (data.hasOwnProperty('buybacksThreeYearsMax'))
        obj.buybacksThreeYearsMax = ApiClient.convertToType(data['buybacksThreeYearsMax'], 'Number');
      if (data.hasOwnProperty('buybacksFiveYearsMin'))
        obj.buybacksFiveYearsMin = ApiClient.convertToType(data['buybacksFiveYearsMin'], 'Number');
      if (data.hasOwnProperty('buybacksFiveYearsMax'))
        obj.buybacksFiveYearsMax = ApiClient.convertToType(data['buybacksFiveYearsMax'], 'Number');
      if (data.hasOwnProperty('buybacksTenYearsMin'))
        obj.buybacksTenYearsMin = ApiClient.convertToType(data['buybacksTenYearsMin'], 'Number');
      if (data.hasOwnProperty('buybacksTenYearsMax'))
        obj.buybacksTenYearsMax = ApiClient.convertToType(data['buybacksTenYearsMax'], 'Number');
      if (data.hasOwnProperty('buybacksTwentyYearsMin'))
        obj.buybacksTwentyYearsMin = ApiClient.convertToType(data['buybacksTwentyYearsMin'], 'Number');
      if (data.hasOwnProperty('buybacksTwentyYearsMax'))
        obj.buybacksTwentyYearsMax = ApiClient.convertToType(data['buybacksTwentyYearsMax'], 'Number');
      if (data.hasOwnProperty('potentialUpside'))
        obj.potentialUpside = ApiClient.convertToType(data['potentialUpside'], 'Number');
    }
    return obj;
  }
}

/**
 * A textual search term.
 * @member {String} searchQuery
 */
ScreenerRequest.prototype.searchQuery = undefined;

/**
 * The ids of the exchanges to use.
 * @member {Array.<Number>} exchangeIds
 */
ScreenerRequest.prototype.exchangeIds = undefined;

/**
 * The ids of the sectors to use.
 * @member {Array.<Number>} sectorIds
 */
ScreenerRequest.prototype.sectorIds = undefined;

/**
 * The ids of the industries to use.
 * @member {Array.<Number>} industryIds
 */
ScreenerRequest.prototype.industryIds = undefined;

/**
 * The minimum market capitalization.
 * @member {Number} marketCapMin
 */
ScreenerRequest.prototype.marketCapMin = undefined;

/**
 * The maximum market capitalization.
 * @member {Number} marketCapMax
 */
ScreenerRequest.prototype.marketCapMax = undefined;

/**
 * The minimum price beta for a 5 year period calculated monthly.
 * @member {Number} betaMin
 */
ScreenerRequest.prototype.betaMin = undefined;

/**
 * The maximum price beta for a 5 year period calculated monthly.
 * @member {Number} betaMax
 */
ScreenerRequest.prototype.betaMax = undefined;

/**
 * The minimum current dividend value.
 * @member {Number} forwardDividendMin
 */
ScreenerRequest.prototype.forwardDividendMin = undefined;

/**
 * The maximum current dividend value.
 * @member {Number} forwardDividendMax
 */
ScreenerRequest.prototype.forwardDividendMax = undefined;

/**
 * The minimum current dividend percentage.
 * @member {Number} forwardDividendYieldMin
 */
ScreenerRequest.prototype.forwardDividendYieldMin = undefined;

/**
 * The maximum current dividend percentage.
 * @member {Number} forwardDividendYieldMax
 */
ScreenerRequest.prototype.forwardDividendYieldMax = undefined;

/**
 * The minimum short ratio.
 * @member {Number} shortRatioMin
 */
ScreenerRequest.prototype.shortRatioMin = undefined;

/**
 * The maximum short ratio.
 * @member {Number} shortRatioMax
 */
ScreenerRequest.prototype.shortRatioMax = undefined;

/**
 * The minimum percentage of shares short.
 * @member {Number} sharesShortPercentageMin
 */
ScreenerRequest.prototype.sharesShortPercentageMin = undefined;

/**
 * The maximum percentage of shares short.
 * @member {Number} sharesShortPercentageMax
 */
ScreenerRequest.prototype.sharesShortPercentageMax = undefined;

/**
 * The minimum percentage of shares short on the last month.
 * @member {Number} sharesShortPreviousMonthPercentageMin
 */
ScreenerRequest.prototype.sharesShortPreviousMonthPercentageMin = undefined;

/**
 * The maximum percentage of shares short on the last month.
 * @member {Number} sharesShortPreviousMonthPercentageMax
 */
ScreenerRequest.prototype.sharesShortPreviousMonthPercentageMax = undefined;

/**
 * @member {module:model/Recommendation} analystRecommendationMin
 */
ScreenerRequest.prototype.analystRecommendationMin = undefined;

/**
 * @member {module:model/Recommendation} analystRecommendationMax
 */
ScreenerRequest.prototype.analystRecommendationMax = undefined;

/**
 * The minimum stock price percentage change in the last day.
 * @member {Number} performanceOneDayMin
 */
ScreenerRequest.prototype.performanceOneDayMin = undefined;

/**
 * The maximum stock price percentage change in the last day.
 * @member {Number} performanceOneDayMax
 */
ScreenerRequest.prototype.performanceOneDayMax = undefined;

/**
 * The minimum stock price percentage change in the last week.
 * @member {Number} performanceOneWeekMin
 */
ScreenerRequest.prototype.performanceOneWeekMin = undefined;

/**
 * The maximum stock price percentage change in the last week.
 * @member {Number} performanceOneWeekMax
 */
ScreenerRequest.prototype.performanceOneWeekMax = undefined;

/**
 * The minimum stock price percentage change in the last two weeks.
 * @member {Number} performanceTwoWeeksMin
 */
ScreenerRequest.prototype.performanceTwoWeeksMin = undefined;

/**
 * The maximum stock price percentage change in the last two weeks.
 * @member {Number} performanceTwoWeeksMax
 */
ScreenerRequest.prototype.performanceTwoWeeksMax = undefined;

/**
 * The minimum stock price percentage change in the last month.
 * @member {Number} performanceOneMonthMin
 */
ScreenerRequest.prototype.performanceOneMonthMin = undefined;

/**
 * The maximum stock price percentage change in the last month.
 * @member {Number} performanceOneMonthMax
 */
ScreenerRequest.prototype.performanceOneMonthMax = undefined;

/**
 * The minimum stock price percentage change in the last three months.
 * @member {Number} performanceThreeMonthsMin
 */
ScreenerRequest.prototype.performanceThreeMonthsMin = undefined;

/**
 * The maximum stock price percentage change in the last three months.
 * @member {Number} performanceThreeMonthsMax
 */
ScreenerRequest.prototype.performanceThreeMonthsMax = undefined;

/**
 * The minimum stock price percentage change in the last year.
 * @member {Number} performanceOneYearMin
 */
ScreenerRequest.prototype.performanceOneYearMin = undefined;

/**
 * The maximum stock price percentage change in the last year.
 * @member {Number} performanceOneYearMax
 */
ScreenerRequest.prototype.performanceOneYearMax = undefined;

/**
 * The minimum stock price percentage change in the last three years.
 * @member {Number} performanceThreeYearsMin
 */
ScreenerRequest.prototype.performanceThreeYearsMin = undefined;

/**
 * The maximum stock price percentage change in the last three years.
 * @member {Number} performanceThreeYearsMax
 */
ScreenerRequest.prototype.performanceThreeYearsMax = undefined;

/**
 * The minimum stock price percentage change in the last five years.
 * @member {Number} performanceFiveYearsMin
 */
ScreenerRequest.prototype.performanceFiveYearsMin = undefined;

/**
 * The maximum stock price percentage change in the last five years.
 * @member {Number} performanceFiveYearsMax
 */
ScreenerRequest.prototype.performanceFiveYearsMax = undefined;

/**
 * The minimum stock price percentage change in the last ten years.
 * @member {Number} performanceTenYearsMin
 */
ScreenerRequest.prototype.performanceTenYearsMin = undefined;

/**
 * The maximum stock price percentage change in the last ten years.
 * @member {Number} performanceTenYearsMax
 */
ScreenerRequest.prototype.performanceTenYearsMax = undefined;

/**
 * The minimum stock price percentage change in the last twenty years.
 * @member {Number} performanceTwentyYearsMin
 */
ScreenerRequest.prototype.performanceTwentyYearsMin = undefined;

/**
 * The maximum stock price percentage change in the last twenty years.
 * @member {Number} performanceTwentyYearsMax
 */
ScreenerRequest.prototype.performanceTwentyYearsMax = undefined;

/**
 * The minimum EPS growth in the last year.
 * @member {Number} epsGrowthOneYearMin
 */
ScreenerRequest.prototype.epsGrowthOneYearMin = undefined;

/**
 * The maximum EPS growth in the last year.
 * @member {Number} epsGrowthOneYearMax
 */
ScreenerRequest.prototype.epsGrowthOneYearMax = undefined;

/**
 * The minimum EPS growth in the last two years. This value is annualized.
 * @member {Number} epsGrowthTwoYearsMin
 */
ScreenerRequest.prototype.epsGrowthTwoYearsMin = undefined;

/**
 * The maximum EPS growth in the last two years. This value is annualized.
 * @member {Number} epsGrowthTwoYearsMax
 */
ScreenerRequest.prototype.epsGrowthTwoYearsMax = undefined;

/**
 * The minimum EPS growth in the last three years. This value is annualized.
 * @member {Number} epsGrowthThreeYearsMin
 */
ScreenerRequest.prototype.epsGrowthThreeYearsMin = undefined;

/**
 * The maximum EPS growth in the last three years. This value is annualized.
 * @member {Number} epsGrowthThreeYearsMax
 */
ScreenerRequest.prototype.epsGrowthThreeYearsMax = undefined;

/**
 * The minimum EPS growth in the last five years. This value is annualized.
 * @member {Number} epsGrowthFiveYearsMin
 */
ScreenerRequest.prototype.epsGrowthFiveYearsMin = undefined;

/**
 * The maximum EPS growth in the last five years. This value is annualized.
 * @member {Number} epsGrowthFiveYearsMax
 */
ScreenerRequest.prototype.epsGrowthFiveYearsMax = undefined;

/**
 * The minimum EPS growth in the last ten years. This value is annualized.
 * @member {Number} epsGrowthTenYearsMin
 */
ScreenerRequest.prototype.epsGrowthTenYearsMin = undefined;

/**
 * The maximum EPS growth in the last ten years. This value is annualized.
 * @member {Number} epsGrowthTenYearsMax
 */
ScreenerRequest.prototype.epsGrowthTenYearsMax = undefined;

/**
 * The minimum EPS growth in the last twenty years. This value is annualized.
 * @member {Number} epsGrowthTwentyYearsMin
 */
ScreenerRequest.prototype.epsGrowthTwentyYearsMin = undefined;

/**
 * The maximum EPS growth in the last twenty years. This value is annualized.
 * @member {Number} epsGrowthTwentyYearsMax
 */
ScreenerRequest.prototype.epsGrowthTwentyYearsMax = undefined;

/**
 * The minimum price to earnings value.
 * @member {Number} peMin
 */
ScreenerRequest.prototype.peMin = undefined;

/**
 * The maximum price to earnings value.
 * @member {Number} peMax
 */
ScreenerRequest.prototype.peMax = undefined;

/**
 * The minimum price to earnings to growth value.
 * @member {Number} pegMin
 */
ScreenerRequest.prototype.pegMin = undefined;

/**
 * The maximum price to earnings to growth value.
 * @member {Number} pegMax
 */
ScreenerRequest.prototype.pegMax = undefined;

/**
 * The minimum price to free cash flow value.
 * @member {Number} priceFcfMin
 */
ScreenerRequest.prototype.priceFcfMin = undefined;

/**
 * The maximum price to free cash flow value.
 * @member {Number} priceFcfMax
 */
ScreenerRequest.prototype.priceFcfMax = undefined;

/**
 * The minimum book value per share.
 * @member {Number} bookValuePerShareMin
 */
ScreenerRequest.prototype.bookValuePerShareMin = undefined;

/**
 * The maximum book value per share.
 * @member {Number} bookValuePerShareMax
 */
ScreenerRequest.prototype.bookValuePerShareMax = undefined;

/**
 * The minimum price to book value.
 * @member {Number} priceBookValuePerShareMin
 */
ScreenerRequest.prototype.priceBookValuePerShareMin = undefined;

/**
 * The maximum price to book value.
 * @member {Number} priceBookValuePerShareMax
 */
ScreenerRequest.prototype.priceBookValuePerShareMax = undefined;

/**
 * The minimum payout ratio (as percentage).
 * @member {Number} payoutMin
 */
ScreenerRequest.prototype.payoutMin = undefined;

/**
 * The maximum payout ratio (as percentage).
 * @member {Number} payoutMax
 */
ScreenerRequest.prototype.payoutMax = undefined;

/**
 * The minimum debt to equity ratio (as percentage).
 * @member {Number} debtToEquityMin
 */
ScreenerRequest.prototype.debtToEquityMin = undefined;

/**
 * The maximum debt to equity ratio (as percentage).
 * @member {Number} debtToEquityMax
 */
ScreenerRequest.prototype.debtToEquityMax = undefined;

/**
 * The minimum gross margin (as percentage).
 * @member {Number} grossMarginMin
 */
ScreenerRequest.prototype.grossMarginMin = undefined;

/**
 * The maximum gross margin (as percentage).
 * @member {Number} grossMarginMax
 */
ScreenerRequest.prototype.grossMarginMax = undefined;

/**
 * The minimum operating margin (as percentage).
 * @member {Number} operatingMarginMin
 */
ScreenerRequest.prototype.operatingMarginMin = undefined;

/**
 * The maximum operating margin (as percentage).
 * @member {Number} operatingMarginMax
 */
ScreenerRequest.prototype.operatingMarginMax = undefined;

/**
 * The minimum profit margin (as percentage).
 * @member {Number} profitMarginMin
 */
ScreenerRequest.prototype.profitMarginMin = undefined;

/**
 * The maximum profit margin (as percentage).
 * @member {Number} profitMarginMax
 */
ScreenerRequest.prototype.profitMarginMax = undefined;

/**
 * The minimum price to sales ratio.
 * @member {Number} priceToSalesMin
 */
ScreenerRequest.prototype.priceToSalesMin = undefined;

/**
 * The maximum price to sales ratio.
 * @member {Number} priceToSalesMax
 */
ScreenerRequest.prototype.priceToSalesMax = undefined;

/**
 * The minimum percentage of shares bought back in the last 3 months. Negative values represent dilution of shares.
 * @member {Number} buybacksThreeMonthsMin
 */
ScreenerRequest.prototype.buybacksThreeMonthsMin = undefined;

/**
 * The maximum percentage of shares bought back in the last 3 months. Negative values represent dilution of shares.
 * @member {Number} buybacksThreeMonthsMax
 */
ScreenerRequest.prototype.buybacksThreeMonthsMax = undefined;

/**
 * The minimum percentage of shares bought back in the last 6 months. Negative values represent dilution of shares.
 * @member {Number} buybacksSixMonthsMin
 */
ScreenerRequest.prototype.buybacksSixMonthsMin = undefined;

/**
 * @member {Number} buybacksSixMonthsMax
 */
ScreenerRequest.prototype.buybacksSixMonthsMax = undefined;

/**
 * The minimum percentage of shares bought back in the last year. Negative values represent dilution of shares.
 * @member {Number} buybacksOneYearMin
 */
ScreenerRequest.prototype.buybacksOneYearMin = undefined;

/**
 * The maximum percentage of shares bought back in the last year. Negative values represent dilution of shares.
 * @member {Number} buybacksOneYearMax
 */
ScreenerRequest.prototype.buybacksOneYearMax = undefined;

/**
 * The minimum percentage of shares bought back in the last 2 years. Negative values represent dilution of shares.
 * @member {Number} buybacksTwoYearsMin
 */
ScreenerRequest.prototype.buybacksTwoYearsMin = undefined;

/**
 * The maximum percentage of shares bought back in the last 2 years. Negative values represent dilution of shares.
 * @member {Number} buybacksTwoYearsMax
 */
ScreenerRequest.prototype.buybacksTwoYearsMax = undefined;

/**
 * The minimum percentage of shares bought back in the last 3 years. Negative values represent dilution of shares.
 * @member {Number} buybacksThreeYearsMin
 */
ScreenerRequest.prototype.buybacksThreeYearsMin = undefined;

/**
 * The maximum percentage of shares bought back in the last 3 years. Negative values represent dilution of shares.
 * @member {Number} buybacksThreeYearsMax
 */
ScreenerRequest.prototype.buybacksThreeYearsMax = undefined;

/**
 * The minimum percentage of shares bought back in the last 5 years. Negative values represent dilution of shares.
 * @member {Number} buybacksFiveYearsMin
 */
ScreenerRequest.prototype.buybacksFiveYearsMin = undefined;

/**
 * The maximum percentage of shares bought back in the last 5 years. Negative values represent dilution of shares.
 * @member {Number} buybacksFiveYearsMax
 */
ScreenerRequest.prototype.buybacksFiveYearsMax = undefined;

/**
 * The minimum percentage of shares bought back in the last 10 years. Negative values represent dilution of shares.
 * @member {Number} buybacksTenYearsMin
 */
ScreenerRequest.prototype.buybacksTenYearsMin = undefined;

/**
 * The maximum percentage of shares bought back in the last 10 years. Negative values represent dilution of shares.
 * @member {Number} buybacksTenYearsMax
 */
ScreenerRequest.prototype.buybacksTenYearsMax = undefined;

/**
 * The minimum percentage of shares bought back in the last 20 years. Negative values represent dilution of shares.
 * @member {Number} buybacksTwentyYearsMin
 */
ScreenerRequest.prototype.buybacksTwentyYearsMin = undefined;

/**
 * The maximum percentage of shares bought back in the last 20 years. Negative values represent dilution of shares.
 * @member {Number} buybacksTwentyYearsMax
 */
ScreenerRequest.prototype.buybacksTwentyYearsMax = undefined;

/**
 * The upside potential according to the analysts' target price consensus (as percentage). I.e. If the stock price is $100 and the analysts' target price consensus is $150 then the potential upside is 50%.
 * @member {Number} potentialUpside
 */
ScreenerRequest.prototype.potentialUpside = undefined;

