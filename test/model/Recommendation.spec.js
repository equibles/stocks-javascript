/*
 * Stocks
 * <h3>Authentication</h3>                     You need to authenticate to use this API.                     To authenticate click on the \"Authorize\" button and do one of the following steps.<br />                     1. Send your API key in the headers of the request by typing \"Bearer my-key\" on the Bearer authorization scheme.<br />                     2. Send your API key on the \"ApiKey\" query string parameter. To do this type your API key in the Query String authorization scheme.<br />                     Both methods are equally valid. We offer both options so that you can use the method that is easier to use in your application.<br />                     <br />                     <h3>API limits</h3>                     Your API key may be subject to daily/hourly limits. To know how much requests you have left look at the following headers in the response.<br />                     1. <strong>x-ratelimit-limit</strong> - The total number of requests that you are allowed to make in a given period (hour/day)                       2. <strong>x-ratelimit-remaining</strong> - The number of remaining requests that you can perform in the current period.<br />                     3. <strong>x-ratelimit-reset</strong> - The number of seconds until the current period resets.<br />                     <br />                     <h3>Suggestions</h3>                     You don't need to implement the whole API by hand in your programming language of choice.<br />                     Since this API has an OpenAPI specification you can use                      <a href=\"https://github.com/swagger-api/swagger-codegen\" target=\"_blank\">Swagger Generator</a>                      to automatically generate client stubs for more than 30 programming languages.                     <br />                     <br />                     You don't have an API key? <a href=\"https://api.equibles.com/pricing\" target=\"_blank\">Get one for free here.</a>
 *
 * OpenAPI spec version: v1
 * Contact: equibles@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.32
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EquiblesStocks);
  }
}(this, function(expect, EquiblesStocks) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Recommendation', function() {
      beforeEach(function() {
        instance = EquiblesStocks.Recommendation;
      });

      it('should create an instance of Recommendation', function() {
        // TODO: update the code to test Recommendation
        expect(instance).to.be.a('object');
      });

      it('should have the property strongBuy', function() {
        expect(instance).to.have.property('strongBuy');
        expect(instance.strongBuy).to.be("StrongBuy");
      });

      it('should have the property buy', function() {
        expect(instance).to.have.property('buy');
        expect(instance.buy).to.be("Buy");
      });

      it('should have the property hold', function() {
        expect(instance).to.have.property('hold');
        expect(instance.hold).to.be("Hold");
      });

      it('should have the property sell', function() {
        expect(instance).to.have.property('sell');
        expect(instance.sell).to.be("Sell");
      });

      it('should have the property strongSell', function() {
        expect(instance).to.have.property('strongSell');
        expect(instance.strongSell).to.be("StrongSell");
      });

    });
  });

}));
